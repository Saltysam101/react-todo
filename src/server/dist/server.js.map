{"version":3,"file":"server.js","names":["MySQLStore","require","session","sessionStore","config","mysql","app","use","express","json","origin","methods","credentials","bodyParser","urlencoded","extended","key","secret","process","env","SESSION_SECRET","resave","store","saveUninitialized","cookie","maxAge","path","__dirname","apiRouter","registerRouter","loginRouter","todoRouter","req","res","next","sendFile","error","errorHandler","listen","port","console","log"],"sources":["../server.js"],"sourcesContent":["import express, { application } from \"express\";\r\nimport morgan from \"morgan\";\r\nimport cors from \"cors\";\r\nimport apiRouter from \"./routes\";\r\nimport registerRouter from \"./routes/register\";\r\nimport loginRouter from \"./routes/login\";\r\nimport todoRouter from \"./routes/todo\";\r\nimport config from \"./config\";\r\nimport { errorHandler } from \"./middlewares/errorHandler\";\r\nimport { join } from \"path\";\r\nimport session from \"express-session\";\r\nimport bodyParser from \"body-parser\";\r\nconst MySQLStore = require(\"express-mysql-session\")(session);\r\n\r\n\r\nconst sessionStore = new MySQLStore(config.mysql);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst app = express();\r\n\r\n/**\r\n * Parses incoming request body as json if header indicates application/json\r\n */\r\napp.use(express.json());\r\n\r\n/**\r\n * Enables incoming requests from cross origin domains\r\n */\r\napp.use(cors({\r\n    origin: [\"http://localhost:3000\"],\r\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\"],\r\n    credentials: true\r\n}));\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n/**\r\n * Creates express session and stores data in MySQLStore\r\n */\r\napp.use(session({\r\n    key: \"userId\",\r\n    secret: process.env.SESSION_SECRET,\r\n    resave: false,\r\n    store: sessionStore,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n        maxAge: 86400,\r\n        path: '/'\r\n    }\r\n}))\r\n\r\n/**\r\n * Logs incoming request information to the dev console\r\n */\r\napp.use(morgan(\"dev\"));\r\n\r\n/**\r\n * Directs incoming static asset requests to the public folder\r\n */\r\napp.use(express.static(join(__dirname, \"../client/build\")));\r\n\r\n/**\r\n * Directs all routes starting with /api to the top level api express router\r\n */\r\napp.use(\"/api\", apiRouter);\r\n\r\n/**\r\n * Directs all routes starting with /register to the top level register express router\r\n */\r\napp.use(\"/register\", registerRouter);\r\n\r\n/**\r\n * Directs all routes starting with /login to the top level login express router\r\n */\r\napp.use(\"/login\", loginRouter);\r\n\r\n/**\r\n * Directs all routes starting with /todo to the top level todo express router\r\n */\r\napp.use(\"/todo\", todoRouter);\r\n/**\r\n * Sends the react app index.html for page requests\r\n * Only needed in production when you are not using the react dev server\r\n */\r\napp.use((req, res, next) => {\r\n    try {\r\n        res.sendFile(join(__dirname, \"../client/build/index.html\"));\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n});\r\n\r\n/**\r\n * Error handler middleware\r\n */\r\napp.use(errorHandler);\r\n\r\n/**\r\n * Bind the app to a specified port\r\n * You can access your app at http://localhost:<port>\r\n */\r\napp.listen(config.port || 8080, () =>\r\n    console.log(`Server listening on port ${config.port}...`)\r\n);"],"mappings":"yJAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iE;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAAP,CAAiCC,0BAAjC,CAAnB;;;AAGA,IAAMC,YAAY,GAAG,IAAIH,UAAJ,CAAeI,mBAAOC,KAAtB,CAArB;;;;;;;;;AASA,IAAMC,GAAG,GAAG,0BAAZ;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;;AAEA;AACA;AACA;AACAH,GAAG,CAACC,GAAJ,CAAQ,sBAAK;EACTG,MAAM,EAAE,CAAC,uBAAD,CADC;EAETC,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,CAFA;EAGTC,WAAW,EAAE,IAHJ,EAAL,CAAR;;AAKAN,GAAG,CAACC,GAAJ,CAAQM,uBAAWC,UAAX,CAAsB,EAAEC,QAAQ,EAAE,IAAZ,EAAtB,CAAR;;AAEA;AACA;AACA;AACAT,GAAG,CAACC,GAAJ,CAAQ,gCAAQ;EACZS,GAAG,EAAE,QADO;EAEZC,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,cAFR;EAGZC,MAAM,EAAE,KAHI;EAIZC,KAAK,EAAEnB,YAJK;EAKZoB,iBAAiB,EAAE,KALP;EAMZC,MAAM,EAAE;IACJC,MAAM,EAAE,KADJ;IAEJC,IAAI,EAAE,GAFF,EANI,EAAR,CAAR;;;;AAYA;AACA;AACA;AACApB,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR;;AAEA;AACA;AACA;AACAD,GAAG,CAACC,GAAJ,CAAQC,8BAAe,gBAAKmB,SAAL,EAAgB,iBAAhB,CAAf,CAAR;;AAEA;AACA;AACA;AACArB,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBqB,kBAAhB;;AAEA;AACA;AACA;AACAtB,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBsB,oBAArB;;AAEA;AACA;AACA;AACAvB,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBuB,iBAAlB;;AAEA;AACA;AACA;AACAxB,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBwB,gBAAjB;AACA;AACA;AACA;AACA;AACAzB,GAAG,CAACC,GAAJ,CAAQ,UAACyB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;EACxB,IAAI;IACAD,GAAG,CAACE,QAAJ,CAAa,gBAAKR,SAAL,EAAgB,4BAAhB,CAAb;EACH,CAFD,CAEE,OAAOS,KAAP,EAAc;IACZF,IAAI,CAACE,KAAD,CAAJ;EACH;AACJ,CAND;;AAQA;AACA;AACA;AACA9B,GAAG,CAACC,GAAJ,CAAQ8B,0BAAR;;AAEA;AACA;AACA;AACA;AACA/B,GAAG,CAACgC,MAAJ,CAAWlC,mBAAOmC,IAAP,IAAe,IAA1B,EAAgC;IAC5BC,OAAO,CAACC,GAAR,oCAAwCrC,mBAAOmC,IAA/C,SAD4B,GAAhC"}